{"version":3,"sources":["MenaceSamples/MintBackground.jpg","GetWeb3.js","AsyncConnect.js","WhitelistDictionary.js","FullScreenHook.js","index.js"],"names":["getWeb3","a","window","ethereum","web3","Web3","provider","providers","HttpProvider","AsyncConnect","useState","account","setAccount","contract","setContract","contractAddress","setContractAddress","setWeb3","request","method","accounts","console","log","eth","net","getId","networkId","Contract","Menace","output","abi","_address","alert","error","useEffect","connectWeb3","WhitelistDictionary","whitelist","wlDict","i","length","toLocaleLowerCase","FullScreenHook","wallet","menaceContract","menaceAddress","mintAmount","setMintAmount","presaleMint","getGasPrice","price","methods","mintMenaceWhitelist","toString","send","from","gas","value","event","preventDefault","darkTheme","createTheme","palette","mode","typography","fontFamily","join","Copyright","props","Typography","variant","color","align","Link","href","Date","getFullYear","MintButton","styled","Button","fontSize","padding","border","lineHeight","backgroundColor","borderColor","boxShadow","ThemeProvider","theme","Grid","container","component","sx","height","backgroundImage","MintBackground","backgroundRepeat","backgroundSize","backgroundPosition","CssBaseline","item","direction","alignItems","justify","p","m","display","Container","width","marginTop","flexDirection","borderRadius","opacity","Box","noValidate","mt","fontWeight","justifyContent","Slider","onChangeCommitted","events","handleSlider","aria-label","defaultValue","valueLabelDisplay","step","marks","min","max","fullWidth","type","onClick","handleMint","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0eb48d72.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MintBackground.84661a03.jpg\";","import Web3 from \"web3\";\r\n\r\nconst getWeb3 = async () => {\r\n  if (window.ethereum) {\r\n    window.web3 = new Web3(window.ethereum);\r\n    return window.web3;\r\n  }\r\n  else {\r\n    const provider = new Web3.providers.HttpProvider(\r\n      'https://mainnet.infura.io/v3/bad8cc770bef49dc88683bf2290205c8'\r\n    );\r\n    return new Web3(provider);\r\n  }\r\n}\r\n\r\n\r\nexport default getWeb3;\r\n","import getWeb3 from './GetWeb3'\r\n//import Pixatar from './contracts/Menace_Test_Ganache.json'\r\nimport Menace from './contracts/Menace.json'\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction AsyncConnect() {\r\n    const [account, setAccount] = useState();\r\n    const [contract, setContract] = useState();\r\n    const [contractAddress, setContractAddress] = useState();\r\n    const [web3, setWeb3] = useState();\r\n   \r\n    async function connectWeb3() {\r\n        try {\r\n            // Get network provider and web3 instance.\r\n            const web3 = await getWeb3();\r\n            setWeb3(window.web3);\r\n\r\n            // Use web3 to get the user's accounts.\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n            console.log(\"accounts:\", accounts);\r\n\r\n            // Get the contract instance.\r\n            const networkId = await web3.eth.net.getId();\r\n            console.log(\"network:\", networkId);\r\n            const contract = new web3.eth.Contract(\r\n                Menace.output.abi,\r\n                '0xE51F0eFDbd15B49bD7C253B4D5bdB5F2dC5dba60'\r\n            );\r\n            console.log(\"contract\", contract)\r\n\r\n            // Set accounts, contract, and total supply to the state\r\n            setAccount(accounts[0]);\r\n            setContract(contract);\r\n            setContractAddress(contract._address);\r\n        } catch (error) {\r\n            // Catch any errors for any of the above operations.\r\n            alert(\r\n                `Failed to load web3, accounts, or contract. Check console for details.`,\r\n            );\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        connectWeb3();\r\n    }, []);\r\n\r\n    return [account, contract, contractAddress, web3];\r\n}\r\n\r\nexport default AsyncConnect;","\r\nfunction WhitelistDictionary() {\r\n\r\n    const whitelist = [\"0xdB7aD65591C646F2471DAaDb831D68a89DAdFB2c\"]\r\n\r\n    var wlDict = {};\r\n    for (var i = 0; i < whitelist.length; i++) {\r\n        wlDict[whitelist[i].toLocaleLowerCase()] = true;\r\n    }\r\n    return wlDict\r\n}\r\n\r\nexport default WhitelistDictionary;","import { useState } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Link from '@mui/material/Link';\r\nimport Grid from '@mui/material/Grid';\r\nimport Box from '@mui/material/Box';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider, styled } from '@mui/material/styles';\r\n\r\nimport Slider from '@mui/material/Slider';\r\nimport MintBackground from './MenaceSamples/MintBackground.jpg'\r\n\r\nimport AsyncConnect from './AsyncConnect';\r\n\r\nimport WhitelistDictionary from './WhitelistDictionary'\r\n\r\nfunction FullScreenHook() {\r\n\r\n    const [wallet, menaceContract, menaceAddress, web3] = AsyncConnect();\r\n    const [mintAmount, setMintAmount] = useState();\r\n    const whitelist = WhitelistDictionary();\r\n\r\n    async function presaleMint(mintAmount, wallet) {\r\n        console.log(\"Mint \", mintAmount, \" Menaces\");\r\n        var gasprice = await web3.eth.getGasPrice()\r\n        var price = mintAmount * 99000000000000000;\r\n        console.log(\"Price:\", price)\r\n        // call transfer function\r\n        menaceContract.methods.mintMenaceWhitelist(mintAmount.toString()).send({ from: wallet, gas:300000, value: price })\r\n    }\r\n\r\n    async function mint(mintAmount, wallet) {\r\n        console.log(\"Mint \", mintAmount, \" Menaces\");\r\n        var gasprice = await web3.eth.getGasPrice()\r\n        console.log(\"Gas:\", gasprice)\r\n        var price = mintAmount * 200000000000000000;\r\n        console.log(\"Price:\", price)\r\n        // call transfer function\r\n        menaceContract.methods.mintMenace(mintAmount.toString()).send({ from: wallet, gas: 210000, value: price })\r\n    }\r\n\r\n    function handleSlider(event, value) {\r\n        event.preventDefault()\r\n        setMintAmount(value)\r\n    }\r\n\r\n    async function handleMint(event) {\r\n        event.preventDefault();\r\n        if (whitelist[wallet]){\r\n            console.log(\"in whitelist\",wallet)\r\n            presaleMint(mintAmount,wallet)\r\n        }\r\n    }\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            mode: 'dark',\r\n        },\r\n        typography: {\r\n            fontFamily: [\r\n                'Open Sans',\r\n                'Roboto'\r\n            ].join(','),\r\n        }\r\n    });\r\n\r\n    function Copyright(props) {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://www.menace.world/\">\r\n                    Menace World\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    const MintButton = styled(Button)({\r\n        fontSize: 16,\r\n        padding: '6px 12px',\r\n        border: '1px solid',\r\n        lineHeight: 1.5,\r\n        backgroundColor: 'grey',\r\n        fontFamily: [\r\n            'Roboto',\r\n        ].join(','),\r\n        '&:hover': {\r\n            backgroundColor: '#fff',\r\n            borderColor: 'rgba(255, 255, 255, 0.08)',\r\n            boxShadow: 'rgba(255, 255, 255, 0.16)',\r\n        },\r\n        '&:active': {\r\n            boxShadow: '#fff',\r\n            backgroundColor: '#fff',\r\n            borderColor: '#fff',\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Grid\r\n                container\r\n                component=\"main\"\r\n                sx={{\r\n                    height: '100vh',\r\n                    backgroundImage: `url(${MintBackground})`,\r\n                    backgroundRepeat: 'no-repeat',\r\n                    backgroundColor: 'Transparent',\r\n                    backgroundSize: 'cover',\r\n                    backgroundPosition: 'center'\r\n                }}>\r\n                <CssBaseline />\r\n                <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    alignItems=\"flex-end\"\r\n                    justify=\"flex-start\"\r\n                    sx={{\r\n                        p: 4,\r\n                        m: -2\r\n                    }}\r\n                >\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    container\r\n                    direction=\"column\"\r\n                    display=\"flex\"\r\n                    justify=\"center\"\r\n                >\r\n                    <Container\r\n                        sx={{\r\n                            width: 500,\r\n                            height: 280,\r\n                            backgroundColor: '#121212',\r\n                            marginTop: -10,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            alignItems: 'center',\r\n                            borderRadius: 8,\r\n                            opacity: [1, 1, .92],\r\n                        }}\r\n                    >\r\n                        <Box\r\n                            component=\"form\"\r\n                            noValidate\r\n                            sx={{\r\n                                mt: 1,\r\n                            }}>\r\n                            <Typography\r\n                                component=\"h1\"\r\n                                variant=\"Title\"\r\n                                fontWeight=\"fontWeightBold\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                            >\r\n                                ENTER THE MENACE WORLD\r\n                            </Typography>\r\n                            <Slider\r\n                                onChangeCommitted={(events, value) => handleSlider(events, value)}\r\n                                aria-label=\"Mint Amount\"\r\n                                defaultValue={0}\r\n                                valueLabelDisplay=\"auto\"\r\n                                step={1}\r\n                                marks\r\n                                min={1}\r\n                                max={5}\r\n                                sx={{\r\n                                    color: 'text.primary'\r\n                                }}\r\n                            />\r\n                            <MintButton\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                type=\"submit\"\r\n                                onClick={(event) => handleMint(event)}\r\n                            >\r\n                                Mint\r\n                            </MintButton>\r\n                            <Typography\r\n                                component=\"h4\"\r\n                                variant=\"Subtitle\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                                sx={{\r\n                                    m: 1\r\n                                }}\r\n                            >\r\n                                Connected Wallet: {wallet}\r\n                            </Typography>\r\n                            <Typography\r\n                                component=\"h4\"\r\n                                variant=\"Subtitle\"\r\n                                color=\"White\"\r\n                                align=\"center\"\r\n                                display='flex'\r\n                                justifyContent='center'\r\n                                sx={{\r\n                                    m: 1\r\n                                }}\r\n                            >\r\n                                Contract Address: {menaceAddress}\r\n                            </Typography>\r\n                            <Copyright sx={{ mt: 1 }} />\r\n                        </Box>\r\n                    </Container>\r\n                </Grid>\r\n            </Grid>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default FullScreenHook;","import React from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport HookApp from './FullScreenHook'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HookApp />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n  \r\n\r\n"],"sourceRoot":""}